<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='statedata' inline='true' name='federated.1hu5nfw0n7mos517k5oh20gqvwhh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='statedata' name='textscan.0c2barp1x6vbv41afct6k1m8o8vy'>
            <connection class='textscan' directory='C:/Users/wagra/Desktop' filename='statedata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0c2barp1x6vbv41afct6k1m8o8vy' name='statedata.csv' table='[statedata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='fips' ordinal='2' />
            <column datatype='integer' name='cases' ordinal='3' />
            <column datatype='integer' name='deaths' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0c2barp1x6vbv41afct6k1m8o8vy' name='statedata.csv' table='[statedata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='fips' ordinal='2' />
            <column datatype='integer' name='cases' ordinal='3' />
            <column datatype='integer' name='deaths' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[statedata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[statedata.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[statedata.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[statedata.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[statedata.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[statedata.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='statedata.csv' datatype='table' name='[__tableau_internal_object_id__].[statedata.csv_DCB04F15CC3048F0BF2DBEE6306138CD]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[fips]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='statedata.csv' id='statedata.csv_DCB04F15CC3048F0BF2DBEE6306138CD'>
            <properties context=''>
              <relation connection='textscan.0c2barp1x6vbv41afct6k1m8o8vy' name='statedata.csv' table='[statedata#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='fips' ordinal='2' />
                  <column datatype='integer' name='cases' ordinal='3' />
                  <column datatype='integer' name='deaths' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='statedata' name='federated.1hu5nfw0n7mos517k5oh20gqvwhh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hu5nfw0n7mos517k5oh20gqvwhh'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[Longitude (generated)]' field-type='quantitative' max='34078139.669310093' min='23808762.434336219' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[Latitude (generated)]' field-type='quantitative' max='8183745.1733129863' min='2315529.3481410928' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[none:state:nk]' />
              <color column='[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[sum:cases:qk]' />
              <size column='[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[sum:cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.0386741161346436' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='has-halo' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[Latitude (generated)]</rows>
        <cols>[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[none:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{B991A780-D10F-40EE-BE5E-4792751185D6}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[sum:cases:qk]' type='color' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[sum:cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-07-28#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[none:date:qk]</field>
            <field>[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[none:state:nk]</field>
            <field>[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[sum:cases:qk]</field>
            <field>[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[tyr:date:ok]</field>
            <field>[federated.1hu5nfw0n7mos517k5oh20gqvwhh].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{ACDA86F4-35BB-485C-9305-46ACCC1818F1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
